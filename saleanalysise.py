# -*- coding: utf-8 -*-
"""saleAnalysise

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sj-iJU_eEYOvoLcayc4cEfMb4A9FhMvT
"""

import pandas as pd
import datetime as dt

github_path = "https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_"

all_months_data = pd.DataFrame()
all_frames = []
total = 0
#import all data from github repo
for i in range(1,13):
  path = github_path + dt.date(2008, i, 1).strftime('%B')+ "_2019.csv"
  df = pd.read_csv(path)
  #df.info()
  len(df.index)
  #merge each file as the are read into one dataframe
  total+=len(df.index)
  #all_months_data =pd.concat([all_months_data,df],ignore_index=True)
  all_months_data = all_months_data.append(df,ignore_index=True)
print(all_months_data.info())

print(total)

all_data =all_months_data.dropna(how="all")

all_data.info()

"""# Cleaning up data"""

all_data.isnull().sum()
all_data=all_data.dropna()

df = all_data[all_data.duplicated(keep=False)]
all_data=all_data.drop_duplicates()
all_data.info()

"""# Q1. What Month had the best sales"""

#doing cleaning first
all_data["Month"] = all_data["Order Date"].str[0:2]
all_data = all_data[all_data["Month"]!="Or"]
all_data["Month"] = all_data["Month"].astype("int32")
all_data["Quantity Ordered"] = all_data["Quantity Ordered"].astype("int32")
all_data["Price Each"] = all_data["Price Each"].astype(float)
all_data.info()

#next we group by month to answer the questions

all_data["Sale"] = all_data["Quantity Ordered"]*all_data["Price Each"]
month_sales =all_data.groupby("Month").sum()
month_sales

import matplotlib.pyplot as plt

months = range(1,13)
plt.bar(months,month_sales["Sale"])
plt.xticks(months)

plt.ylabel("Sales in us dollar $")
plt.xlabel("Month number")
plt.show()

"""#What US city had the highest number of sales"""

all_data.head()

def get_cities(x):
  return x.split(",")[1]

def get_address(x):
  return x.split(",")[2].split(" ")[1]

all_data["City"] =all_data["Purchase Address"].apply(lambda x:f"{get_cities(x)}({get_address(x)})")

result = all_data.groupby("City").sum()
result

cities = [city for city,df in all_data.groupby("City")]
cities

plt.bar(cities,result["Sale"])
plt.xticks(cities,rotation="vertical",size=8)

plt.ylabel("Sales in us dollar $")
plt.xlabel("Cities Name")
plt.show()

"""What time is the best to advertise"""

all_data["Hour"] = pd.to_datetime(all_data["Order Date"]).dt.hour

hours= [hour for hour,df in all_data.groupby("Hour")]

plt.plot(hours,all_data.groupby("Hour").count())
plt.xticks(hours)
plt.xlabel("Hours of the day")
plt.ylabel("Number of Orders")
plt.grid()
plt.show()

df =all_data[all_data["Order ID"].duplicated(keep=False)]

df = df.groupby('Order ID').agg({'Product': ', '.join}).reset_index()
#df = df[["Order ID","Grouped"]].drop_duplicates()
#df = df.groupby(['Order ID'])['Product'].apply(', '.join).reset_index()
df

#df.groupby("Product").size()
kd = df.groupby('Product')['Order ID'].nunique().sort_values(ascending=False).reset_index(name='count')
kd

all_data.head()



"""What product was sold the most and why?"""

group_product = all_data.groupby("Product").sum()
group_product = group_product[["Quantity Ordered","Price Each"]]
qty_order = group_product["Quantity Ordered"]
products = [product for product,df in all_data.groupby("Product")]
price = all_data.groupby("Product").mean()["Price Each"]


fig, ax1 = plt.subplots()

ax2 = ax1.twinx()
ax1.bar(products, qty_order,color='g')
ax2.plot(products, price, 'b-')

ax1.set_xlabel('Product')
ax1.set_ylabel('Quantity Order', color='g')
ax2.set_ylabel('Price', color='b')

ax1.set_xticklabels(products,rotation="vertical",size=8)
plt.show()

correlation = qty_order.corr(price)
correlation